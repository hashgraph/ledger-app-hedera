"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import proto.basic_types_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class TokenMintTransactionBody(google.protobuf.message.Message):
    """*
    Mints tokens to the Token's treasury Account. If no Supply Key is defined,
    the transaction will resolve to TOKEN_HAS_NO_SUPPLY_KEY. The operation
    increases the Total Supply of the Token. The maximum total supply a token can
    have is 2^63-1. The amount provided must be in the lowest denomination
    possible. Example: Token A has 2 decimals. In order to mint 100 tokens, one
    must provide amount of 10000. In order to mint 100.55 tokens, one must
    provide amount of 10055. If both amount and metadata list get filled, a
    INVALID_TRANSACTION_BODY response code will be returned. If the metadata list
    contains metadata which is too large, a METADATA_TOO_LONG response code will
    be returned.
    If neither the amount nor the metadata list get filled, a
    INVALID_TOKEN_MINT_AMOUNT response code will be returned. If the metadata
    list count is greater than the batch size limit global dynamic property, a
    BATCH_SIZE_LIMIT_EXCEEDED response code will be returned.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOKEN_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    @property
    def token(self) -> proto.basic_types_pb2.TokenID:
        """*
        The token for which to mint tokens. If token does not exist, transaction
        results in INVALID_TOKEN_ID
        """
    amount: builtins.int
    """*
    Applicable to tokens of type FUNGIBLE_COMMON. The amount to mint to the
    Treasury Account. Amount must be a positive non-zero number represented in
    the lowest denomination of the token. The new supply must be lower than
    2^63.
    """
    @property
    def metadata(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]:
        """*
        Applicable to tokens of type NON_FUNGIBLE_UNIQUE. A list of metadata that
        are being created. Maximum allowed size of each metadata is 100 bytes
        Limited to 1 metadata chunk (no access to malloc)
        """
    def __init__(
        self,
        *,
        token: proto.basic_types_pb2.TokenID | None = ...,
        amount: builtins.int = ...,
        metadata: collections.abc.Iterable[builtins.bytes] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["token", b"token"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "metadata", b"metadata", "token", b"token"]) -> None: ...

global___TokenMintTransactionBody = TokenMintTransactionBody
