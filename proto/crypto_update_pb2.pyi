"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import proto.basic_types_pb2
import proto.duration_pb2
import proto.timestamp_pb2
import proto.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CryptoUpdateTransactionBody(google.protobuf.message.Message):
    """*
    Change properties for the given account. Any null field is ignored (left
    unchanged). This transaction must be signed by the existing key for this
    account. If the transaction is changing the key field, then the transaction
    must be signed by both the old key (from before the change) and the new key.
    The old key must sign for security. The new key must sign as a safeguard to
    avoid accidentally changing to an invalid key, and then having no way to
    recover.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACCOUNTIDTOUPDATE_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    PROXYACCOUNTID_FIELD_NUMBER: builtins.int
    PROXYFRACTION_FIELD_NUMBER: builtins.int
    SENDRECORDTHRESHOLD_FIELD_NUMBER: builtins.int
    SENDRECORDTHRESHOLDWRAPPER_FIELD_NUMBER: builtins.int
    RECEIVERECORDTHRESHOLD_FIELD_NUMBER: builtins.int
    RECEIVERECORDTHRESHOLDWRAPPER_FIELD_NUMBER: builtins.int
    AUTORENEWPERIOD_FIELD_NUMBER: builtins.int
    EXPIRATIONTIME_FIELD_NUMBER: builtins.int
    RECEIVERSIGREQUIRED_FIELD_NUMBER: builtins.int
    RECEIVERSIGREQUIREDWRAPPER_FIELD_NUMBER: builtins.int
    MEMO_FIELD_NUMBER: builtins.int
    MAX_AUTOMATIC_TOKEN_ASSOCIATIONS_FIELD_NUMBER: builtins.int
    STAKED_ACCOUNT_ID_FIELD_NUMBER: builtins.int
    STAKED_NODE_ID_FIELD_NUMBER: builtins.int
    DECLINE_REWARD_FIELD_NUMBER: builtins.int
    @property
    def accountIDToUpdate(self) -> proto.basic_types_pb2.AccountID:
        """*
        The account ID which is being updated in this transaction
        """
    @property
    def key(self) -> proto.basic_types_pb2.Key:
        """*
        The new key
        """
    @property
    def proxyAccountID(self) -> proto.basic_types_pb2.AccountID:
        """*
        [Deprecated] ID of the account to which this account is proxy staked. If
        proxyAccountID is null, or is an invalid account, or is an account that
        isn't a node, then this account is automatically proxy staked to a node
        chosen by the network, but without earning payments. If the proxyAccountID
        account refuses to accept proxy staking , or if it is not currently running
        a node, then it will behave as if proxyAccountID was null.
        """
    proxyFraction: builtins.int
    """*
    [Deprecated]. Payments earned from proxy staking are shared between the
    node and this account, with proxyFraction / 10000 going to this account
    """
    sendRecordThreshold: builtins.int
    """*
    [Deprecated]. The new threshold amount (in tinybars) for which an account
    record is created for any send/withdraw transaction
    """
    @property
    def sendRecordThresholdWrapper(self) -> proto.wrappers_pb2.UInt64Value:
        """*
        [Deprecated]. The new threshold amount (in tinybars) for which an account
        record is created for any send/withdraw transaction
        """
    receiveRecordThreshold: builtins.int
    """*
    [Deprecated]. The new threshold amount (in tinybars) for which an account
    record is created for any receive/deposit transaction.
    """
    @property
    def receiveRecordThresholdWrapper(self) -> proto.wrappers_pb2.UInt64Value:
        """*
        [Deprecated]. The new threshold amount (in tinybars) for which an account
        record is created for any receive/deposit transaction.
        """
    @property
    def autoRenewPeriod(self) -> proto.duration_pb2.Duration:
        """*
        The duration in which it will automatically extend the expiration period.
        If it doesn't have enough balance, it extends as long as possible. If it is
        empty when it expires, then it is deleted.
        """
    @property
    def expirationTime(self) -> proto.timestamp_pb2.Timestamp:
        """*
        The new expiration time to extend to (ignored if equal to or before the
        current one)
        """
    receiverSigRequired: builtins.bool
    """*
    [Deprecated] Do NOT use this field to set a false value because the
    server cannot distinguish from the default value. Use
    receiverSigRequiredWrapper field for this purpose.
    """
    @property
    def receiverSigRequiredWrapper(self) -> proto.wrappers_pb2.BoolValue:
        """*
        If true, this account's key must sign any transaction depositing into
        this account (in addition to all withdrawals)
        """
    @property
    def memo(self) -> proto.wrappers_pb2.StringValue:
        """*
        If set, the new memo to be associated with the account (UTF-8 encoding max
        100 bytes)
        """
    @property
    def max_automatic_token_associations(self) -> proto.wrappers_pb2.Int32Value:
        """*
        The maximum number of tokens that an Account can be implicitly associated
        with. Up to a 1000 including implicit and explicit associations.
        """
    @property
    def staked_account_id(self) -> proto.basic_types_pb2.AccountID:
        """*
        ID of the new account to which this account is staking. If set to the
        sentinel <tt>0.0.0</tt> AccountID, this field removes this account's
        staked account ID.
        """
    staked_node_id: builtins.int
    """*
    ID of the new node this account is staked to. If set to the sentinel
    <tt>-1</tt>, this field removes this account's staked node ID.
    """
    @property
    def decline_reward(self) -> proto.wrappers_pb2.BoolValue:
        """*
        If true, the account declines receiving a staking reward. The default value
        is false.
        """
    def __init__(
        self,
        *,
        accountIDToUpdate: proto.basic_types_pb2.AccountID | None = ...,
        key: proto.basic_types_pb2.Key | None = ...,
        proxyAccountID: proto.basic_types_pb2.AccountID | None = ...,
        proxyFraction: builtins.int = ...,
        sendRecordThreshold: builtins.int = ...,
        sendRecordThresholdWrapper: proto.wrappers_pb2.UInt64Value | None = ...,
        receiveRecordThreshold: builtins.int = ...,
        receiveRecordThresholdWrapper: proto.wrappers_pb2.UInt64Value | None = ...,
        autoRenewPeriod: proto.duration_pb2.Duration | None = ...,
        expirationTime: proto.timestamp_pb2.Timestamp | None = ...,
        receiverSigRequired: builtins.bool = ...,
        receiverSigRequiredWrapper: proto.wrappers_pb2.BoolValue | None = ...,
        memo: proto.wrappers_pb2.StringValue | None = ...,
        max_automatic_token_associations: proto.wrappers_pb2.Int32Value | None = ...,
        staked_account_id: proto.basic_types_pb2.AccountID | None = ...,
        staked_node_id: builtins.int = ...,
        decline_reward: proto.wrappers_pb2.BoolValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["accountIDToUpdate", b"accountIDToUpdate", "autoRenewPeriod", b"autoRenewPeriod", "decline_reward", b"decline_reward", "expirationTime", b"expirationTime", "key", b"key", "max_automatic_token_associations", b"max_automatic_token_associations", "memo", b"memo", "proxyAccountID", b"proxyAccountID", "receiveRecordThreshold", b"receiveRecordThreshold", "receiveRecordThresholdField", b"receiveRecordThresholdField", "receiveRecordThresholdWrapper", b"receiveRecordThresholdWrapper", "receiverSigRequired", b"receiverSigRequired", "receiverSigRequiredField", b"receiverSigRequiredField", "receiverSigRequiredWrapper", b"receiverSigRequiredWrapper", "sendRecordThreshold", b"sendRecordThreshold", "sendRecordThresholdField", b"sendRecordThresholdField", "sendRecordThresholdWrapper", b"sendRecordThresholdWrapper", "staked_account_id", b"staked_account_id", "staked_id", b"staked_id", "staked_node_id", b"staked_node_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accountIDToUpdate", b"accountIDToUpdate", "autoRenewPeriod", b"autoRenewPeriod", "decline_reward", b"decline_reward", "expirationTime", b"expirationTime", "key", b"key", "max_automatic_token_associations", b"max_automatic_token_associations", "memo", b"memo", "proxyAccountID", b"proxyAccountID", "proxyFraction", b"proxyFraction", "receiveRecordThreshold", b"receiveRecordThreshold", "receiveRecordThresholdField", b"receiveRecordThresholdField", "receiveRecordThresholdWrapper", b"receiveRecordThresholdWrapper", "receiverSigRequired", b"receiverSigRequired", "receiverSigRequiredField", b"receiverSigRequiredField", "receiverSigRequiredWrapper", b"receiverSigRequiredWrapper", "sendRecordThreshold", b"sendRecordThreshold", "sendRecordThresholdField", b"sendRecordThresholdField", "sendRecordThresholdWrapper", b"sendRecordThresholdWrapper", "staked_account_id", b"staked_account_id", "staked_id", b"staked_id", "staked_node_id", b"staked_node_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["receiveRecordThresholdField", b"receiveRecordThresholdField"]) -> typing_extensions.Literal["receiveRecordThreshold", "receiveRecordThresholdWrapper"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["receiverSigRequiredField", b"receiverSigRequiredField"]) -> typing_extensions.Literal["receiverSigRequired", "receiverSigRequiredWrapper"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["sendRecordThresholdField", b"sendRecordThresholdField"]) -> typing_extensions.Literal["sendRecordThreshold", "sendRecordThresholdWrapper"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["staked_id", b"staked_id"]) -> typing_extensions.Literal["staked_account_id", "staked_node_id"] | None: ...

global___CryptoUpdateTransactionBody = CryptoUpdateTransactionBody
